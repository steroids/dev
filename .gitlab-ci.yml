image: node:16.15.0

stages:
  - build
  - deploy

variables:
  DEV_DEPLOY_DIR: '/var/www/$CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME/www-$CI_COMMIT_REF_NAME'
  STEROIDS_REPOS: 'react react-admin react-bootstrap react-native react-webpack'
  VENDOR_DIRS: 'steroids vendor node_modules'
  EXCLUDE_DIRS: '.cache-loader .expo .git .idea node_modules tests mobile'
  PROD_ROOT_DIR: '/var/www/steroids.kozhindev.com/frontend'
  PROD_DEPLOY_DIR: '/var/www/steroids.kozhindev.com/frontend/$CI_COMMIT_REF_NAME-$CI_PIPELINE_ID'

before_script:
  - for DIR in $VENDOR_DIRS; do mkdir -p ../$DIR && rm -rf $DIR && mv ../$DIR .; done

after_script:
  - for DIR in $VENDOR_DIRS; do mv $DIR/ ../; done

build:
  stage: build
  only:
    - master
  artifacts:
    paths:
      - public/*.*
      - public/frontend/*.*
      - public/images/*.*
  script:
    - mkdir -p steroids
    - |
      for REPO in $STEROIDS_REPOS; do
        if [ -d steroids/$REPO ]; then
          cd $CI_PROJECT_DIR/steroids/$REPO
          echo "⏬ Git pull $REPO..."
          git pull
        else
          git clone https://github.com/steroids/$REPO steroids/$REPO
        fi
        cd $CI_PROJECT_DIR
      done
    - yarn
    - node webpack production
    - echo "$CI_COMMIT_REF_NAME-$CI_JOB_ID" > $CI_PROJECT_DIR/public/version.txt

build_prod:
  stage: build
  environment: production
  only:
    - prod
  artifacts:
    paths:
      - public
  script:
    - yarn
    - node webpack production
    - echo "$CI_COMMIT_REF_NAME-$CI_JOB_ID" > $CI_PROJECT_DIR/public/version.txt

deploy_dev:
  stage: deploy
  only:
    - master
  script:
    - ssh root@dev "mkdir -p $DEV_DEPLOY_DIR"
    - printf "%s\n" $EXCLUDE_DIRS > ../.rsync-exclude && rsync -rzak --exclude-from=../.rsync-exclude $CI_PROJECT_DIR/ root@dev:$DEV_DEPLOY_DIR

deploy_prod:
  stage: deploy
  environment: production
  only:
    - prod
  script:
    - ssh prod "mkdir -p $PROD_DEPLOY_DIR"
    - printf "%s\n" $EXCLUDE_DIRS > ../.rsync-exclude
      && rsync -rzak $CI_PROJECT_DIR/public prod:$PROD_DEPLOY_DIR
